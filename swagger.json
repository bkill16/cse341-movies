{
  "swagger": "2.0",
  "info": {
    "title": "Movie Reviews API",
    "description": "API for movies and reviews",
    "version": "1.0.0"
  },
  "host": "cse341-movies.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "tags": [
    {
      "name": "Movies",
      "description": "CRUD operations related to movies"
    },
    {
      "name": "Reviews",
      "description": "CRUD operations related to reviews"
    },
    {
      "name": "Users",
      "description": "CRUD operations related to users"
    }
  ],
  "paths": {
    "/movies": {
      "get": {
        "summary": "Get all movies",
        "tags": ["Movies"],
        "security": [
          {
            "auth0": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Movie"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "An error occurred while retrieving all movies/Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new movie",
        "tags": ["Movies"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "movie",
            "in": "body",
            "description": "Movie object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Movie created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "An error occurred while creating the movie/Internal server error"
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "summary": "Get a single movie by ID",
        "tags": ["Movies"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the movie to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Movie not found"
          },
          "500": {
            "description": "An error occurred while retrieving the movie/Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a movie",
        "tags": ["Movies"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the movie to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "movie",
            "in": "body",
            "description": "Updated movie object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Movie updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Movie not found"
          },
          "500": {
            "description": "An error occurred while updating the movie/Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a movie",
        "tags": ["Movies"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the movie to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Movie deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Movie not found"
          },
          "500": {
            "description": "An error occurred while deleting the movie/Internal server error"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "summary": "Get all reviews",
        "tags": ["Reviews"],
        "security": [
          {
            "auth0": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Review"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "An error occurred while retrieving all reviews/Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new review",
        "tags": ["Reviews"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "review",
            "in": "body",
            "description": "Review object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Review created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "An error occurred while creating the review/Internal server error"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "summary": "Get a single review by ID",
        "tags": ["Reviews"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the review to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Review not found"
          },
          "500": {
            "description": "An error occurred while retrieving the review/Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a review",
        "tags": ["Reviews"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the review to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "review",
            "in": "body",
            "description": "Updated review object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Review updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Review not found"
          },
          "500": {
            "description": "An error occurred while updating the review/Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a review",
        "tags": ["Reviews"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the review to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Review deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Review not found"
          },
          "500": {
            "description": "An error occurred while deleting the review/Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "security": [
          {
            "auth0": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "An error occurred while retrieving all users/Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a single user by ID",
        "tags": ["Users"],
        "security": [
          {
            "auth0": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "An error occurred while retrieving the user/Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Movie": {
      "type": "object",
      "required": ["title", "description"],
      "properties": {
        "id": {
          "type": "string",
          "example": "60d21b4667d0d8992e610c85"
        },
        "title": {
          "type": "string",
          "example": "The Shawshank Redemption"
        },
        "description": {
          "type": "string",
          "example": "Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency."
        },
        "releaseYear": {
          "type": "integer",
          "example": 1994
        },
        "genre": {
          "type": "string",
          "example": "Drama"
        },
        "director": {
          "type": "string",
          "example": "Frank Darabont"
        }
      }
    },
    "Review": {
      "type": "object",
      "required": ["movieId", "reviewer", "rating", "comment"],
      "properties": {
        "id": {
          "type": "string",
          "example": "60d21b4667d0d8992e610c85"
        },
        "movieId": {
          "type": "string",
          "example": "60d21b4667d0d8992e610c85"
        },
        "reviewer": {
          "type": "string",
          "example": "John Doe"
        },
        "rating": {
          "type": "integer",
          "example": 5
        },
        "comment": {
          "type": "string",
          "example": "An outstanding movie with excellent performances."
        }
      }
    },
    "User": {
      "type": "object",
      "required": ["email", "name"],
      "properties": {
        "id": {
          "type": "string",
          "example": "60d21b4667d0d8992e610c85"
        },
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        }
      }
    }
  },
  "securityDefinitions": {
    "auth0": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://dev-mhlztk2ldiohgn5y.us.auth0.com/authorize",
      "scopes": {
        "openid": "OpenID Connect scope"
      }
    }
  }
}
